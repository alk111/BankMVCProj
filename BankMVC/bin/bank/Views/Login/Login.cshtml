@model BankMVC.ViewModels.UserVM

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    if (ViewBag.Message != null)
    {
        <script style="font-size:large;">
            Swal.fire({
                title: "Invalid!",
                text: "@ViewBag.Message",
                icon: "error",
            });
        </script>
    }

}

<style>
    body {
        background-color: #f5f5f5;
        color: #333;
    }

    .container {
        margin-top: auto;
    }

    .login-container {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .login-header {
        text-align: center;
        color: #3498db;
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .login-form {
        margin-top: 20px;
    }

    .form-group {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
    }

    .form-label {
        color: #3498db;
        font-weight: bold;
        flex: 1;
        padding-left: 60px;
    }

    .form-control {
        height: 40px;
        font-size: large;
        flex: 2;
    }

    .login-button {
        width: 100%;
        height: 50px;
        font-size: 18px;
        font-weight: bold;
        background-color: #2ecc71;
        color: #fff;
        border: 2px solid #27ae60;
        border-radius: 5px;
        cursor: pointer;
    }

        .login-button:hover {
            background-color: #239d58;
        }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-6 col-md-offset-3 login-container">
            <div class="login-header">Login</div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="login-form">
                    <div class="form-group">
                        <label class="form-label col-md-4" for="Username">Username</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label col-md-4" for="Password">Password</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="login-button">Login</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
